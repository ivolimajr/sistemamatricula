@model sistemaMatricula.Models.funcionario

@{
    ViewBag.Title = "Create";
    if (Session["UserId"] == null)
    {
        Response.Redirect("~/home/login");
    }
}

<style>
    .body {
        color: black;
    }

    #fundobotao {
        background-color: rgb(255, 255, 255,0.3);
    }

    .col {
        width: 300px;
    }
</style>

<br />
<h2 style="text-align:center">Inserir Novo Funcionário</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-5 offset-md-3"></div>
            <div class="col-md-4 offset-md-4" id="fundobotao">
                <br />
                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.nome, "Nome", htmlAttributes: new { @class = "control-label col-md-2" })
                    </b>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.descricao, "Funcão", htmlAttributes: new { @class = "control-label col-md-2" })
                    </b>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.descricao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.dataAdmissao, "Data Admissão", htmlAttributes: new { @class = "control-label col-md-8" })
                    </b>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dataAdmissao, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.dataAdmissao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <b>
                        @Html.LabelFor(model => model.dataDemissao, "Data Saída (Opcional)", htmlAttributes: new { @class = "control-label col-md-8" })
                    </b>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dataDemissao, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.dataDemissao, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.situacao, new { htmlAttributes = new { @class = "form-control", value="true" } })


                        @Html.ValidationMessageFor(model => model.situacao, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-2"></div>
                        <div class="col">

                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Cadastrar Funcionário" class="btn btn-success btn-lg btn-block" />
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-4"></div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
